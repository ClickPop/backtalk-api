version: '3.5'

networks:
  app-network:
    name: app-network

services:
  db:
    container_name: ${DB_NAME}
    image: postgres
    restart: always
    networks:
      - app-network
    volumes:
      - ~${DB_LOCATION}:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
  api:
    container_name: ${API_NAME}
    build:
      context: .
      args:
        NODE_ENV: ${NODE_ENV:-development}
        PORT: ${PORT}
    restart: on-failure
    depends_on:
      - db
    ports:
      - ${PORT}:${PORT}
    networks:
      - app-network
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV:-development}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
      - HASH_SECRET=${HASH_SECRET}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - ACCESS_TOKEN_EXPIRATION=${ACCESS_TOKEN_EXPIRATION}
      - REFRESH_TOKEN_EXPIRATION=${REFRESH_TOKEN_EXPIRATION}
      - PASSWORD_RESET_EXPIRY=${PASSWORD_RESET_EXPIRY}
      - SENDGRID_KEY=${SENDGRID_KEY}
      - RESET_EMAIL_URL=${RESET_EMAIL_URL}
    command: ${NODE_COMMAND}
